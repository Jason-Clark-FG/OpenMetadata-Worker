name: "Worker: Copy Mirror to Work Repo"

on:
  workflow_run:
    workflows: ["Worker: Mirror 3rd Party to Local"]
    types:
      - completed
  workflow_dispatch:
  # schedule:
  #   - cron: '30 1 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "Show: Info"
        run: |
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "FG_USER: ${{ vars.FG_USER }}"
          echo "FG_USERNAME: ${{ vars.FG_USERNAME }}"
          echo "FG_DOMAIN: ${{ vars.FG_DOMAIN }}"
          echo "FG_COMPOSE_TARGET: ${{ vars.FG_COMPOSE_TARGET }}"
          ls -laR ${GITHUB_WORKSPACE}
          ls -la ${GITHUB_WORKSPACE}/../
          ls -la ${GITHUB_WORKSPACE}/../../
          env | sort

      - uses: actions/checkout@v3
        with:
          repository: Jason-Clark-FG/OpenMetadata-Mirror
          # path: OpenMetadata
          fetch-depth: 0
          # token: $${{ secrets.GIT_TOKEN }}

      - name: "Show: Info"
        run: |
          ls -la ${GITHUB_WORKSPACE}/
          ls -la ${GITHUB_WORKSPACE}/../
          ls -la ${GITHUB_WORKSPACE}/../../
          env | sort

        # - name: Perform Modification
      #   run: |
      #     git config --global user.email "${{ vars.FG_USERNAME }}@${{ vars.FG_DOMAIN }}"
      #     git config --global user.name "${{ vars.FG_USER }}"
      #     git status
      #     git pull
      #     git switch "${{ vars.RELEASE_BRANCH }}"
      #     git status
      #     git switch -c "${{ vars.RELEASE_BRANCH }}-FG"
      #     set -x
      #     which yq >/dev/null 2>&1;echo $?
      #     top_level_name=$(yq ".name" ${{ vars.FG_COMPOSE_TARGET }})
      #     if [[ ${top_level_name} == null ]];then yq -i ".name = \"${compose_top_level_name}\"" ${{ vars.FG_COMPOSE_TARGET }};fi
      #     key_list=$(yq '.services | keys' ${{ vars.FG_COMPOSE_TARGET }} | cut -c '2-')
      #     for key in ${key_list};do restart_value=$(yq ".services.${key}.restart" ${{ vars.FG_COMPOSE_TARGET }});if [[ $restart_value == null ]];then yq -i ".services.${key}.restart = \"always\"" ${{ vars.FG_COMPOSE_TARGET }};fi;done
      #     set +x
      #     git status
      #     git add ${{ vars.FG_COMPOSE_TARGET }}
      #     git commit -m "chore: Modify docker/docker-compose-quickstart/docker-compose.yml"
      #     git push --set-upstream origin "${{ vars.RELEASE_BRANCH }}-FG"
      #     git status

      - name: mirror-repository
        # You may pin to the exact commit or the version.
        # uses: yesolutions/mirror-action@082a9611ed4b64c796245a62b34584ee2ded6833
        # uses: yesolutions/mirror-action@v0.6.0
        uses: yesolutions/mirror-action@master
        with:
          # The remote ref name to use. 'mirror' by default. Useful to avoid conflicts with existing remotes.
          REMOTE_NAME: 'OpenMetadata-Mirror'
          # The remote repository e.g. https://github.com/octocat/foo.git or git@github.com:octocat/foo.git
          REMOTE: 'git@github.com:Jason-Clark-FG/OpenMetadata-FG.git'
          # Username for remote repository
          #GIT_USERNAME: # optional
          # The git https password or token for the remote repository
          #GIT_PASSWORD: # optional
          # The ssh private key for writing to the remote repository, if using ssh
          GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }} # optional
          # The ssh public key for writing to the remote repository. Normally, not required at all
          GIT_SSH_PUBLIC_KEY: ${{ secrets.GIT_SSH_PUBLIC_KEY }} # optional
          # The contents of a SSH known_hosts file for host key verification
          # GIT_SSH_KNOWN_HOSTS: ${{ secrets.GIT_SSH_KNOWN_HOSTS }} # optional
          # if true, skips host key verification. Mutually exclusive with GIT_SSH_KNOWN_HOSTS
          GIT_SSH_NO_VERIFY_HOST: "true" # optional, default is false
          # Push all refs instead of just the current branch
          #PUSH_ALL_REFS: # optional, default is true
          # The arugments to use when pushing the repository
          #GIT_PUSH_ARGS: # optional, default is --tags --force --prune
          # set to "true" to enable debug mode
          DEBUG: "true" # optional, default is false
