name: "Worker: Build Container 2"

on:
  workflow_run:
    workflows: ["Worker: Modify Work Repo"]
    types:
      - completed
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # IMAGE_BASENAME: "fg-openmetadata-db"
  IMAGE_BASENAME: "fg-openmetadata-server"
  # IMAGE_BASENAME: "fg-openmetadata-ingestion"
  # IMAGE_NAME: ${{ github.repository }}
  # IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-db"
  # IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-server"
  # IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-ingestion"
  # IMAGE_FILE: "./docker/mysql/Dockerfile_mysql"
  IMAGE_FILE: "./docker/docker-compose-quickstart/Dockerfile"
  # IMAGE_FILE: "./ingestion/Dockerfile"
  IMAGE_CURRENT_LABEL: "latest"
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: write

    steps:
    # Checkout
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: Jason-Clark-FG/OpenMetadata-FG
        fetch-depth: 0
        ssh-key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
        ref: "${{ vars.RELEASE_BRANCH }}-FG"

    # Ref: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-writing-an-environment-variable-to-github_env
    - name: Additional Variables
      run: |
        echo "IMAGE_NAME=${{ secrets.DOCKER_USER }}/${{ env.IMAGE_BASENAME }}" >> $GITHUB_ENV

    # Show Info
    - name: "Show: Info"
      run: |
        ls -lDR ${GITHUB_WORKSPACE} | grep ':$'
        env | sort

    # Docker Buildx
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2.5.0

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PAT }}

    ## IMAGE2
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        labels: |
            # org.opencontainers.image.revision=${{ env.SHA }}
            org.opencontainers.image.revision=${{ vars.RELEASE_BRANCH }}
        tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4.0.0
      with:
        # context: ${GITHUB_WORKSPACE}/OpenMetadata-FG/
        context: .
        file: ${{ env.IMAGE_FILE }}
        push: ${{ github.event_name != 'pull_request' }}
        # tags: ${{ steps.meta.outputs.tags }}
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_CURRENT_LABEL }}
          ${{ env.IMAGE_NAME }}:${{ vars.RELEASE_BRANCH }}
        labels: |
          ${{ steps.meta.outputs.labels }}
          org.opencontainers.image.title=${{ env.IMAGE_BASENAME }}
          org.opencontainers.image.url=https://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # Show Info
    - name: "Show: Info"
      run: |
        ls -lDR ${GITHUB_WORKSPACE}/../ | grep ':$'
        env | sort

    - name: "Docker Scout: Analyze for critical and high CVEs"
      id: docker-scout-cves
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: docker/scout-action@v0.20.0
      with:
        command: cves
        # image: ${{ steps.meta.outputs.tags }}
        image: ${{ env.IMAGE_NAME }}:${{ vars.RELEASE_BRANCH }}
        sarif-file: output2.sarif.json
        summary: true

    - name: Checkout Self
      uses: actions/checkout@v3
      with:
        path: "self"

    # Ref: https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github#uploading-a-code-scanning-analysis-with-github-actions
    - name: "Docker Scout: Upload SARIF result"
      id: upload-sarif
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: output2.sarif.json
        checkout_path: "self"
