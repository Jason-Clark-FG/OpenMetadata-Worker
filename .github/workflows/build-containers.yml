name: "Worker: Build Containers"

on:
  workflow_run:
    workflows: ["Worker: Modify Work Repo"]
    types:
      - completed
  workflow_dispatch:
  # push:
  #   tags: ["*"]
  #   branches:
  #     - "main"
  # pull_request:
  #   branches: ["**"]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # IMAGE_NAME: ${{ github.repository }}
  # IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-db"
  # IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-ingestion"
  IMAGE_NAME: "${{ secrets.DOCKER_USER }}/fg-openmetadata-server"
  SHA: ${{ github.event.pull_request.head.sha || github.event.after }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: write

    steps:
    - name: Checkout repository 1
      uses: actions/checkout@v3
      with:
        path: "self"

    - name: Checkout repository 2
      uses: actions/checkout@v3
      with:
        repository: Jason-Clark-FG/OpenMetadata-FG
        fetch-depth: 0
        ssh-key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
        # token: ${{ secrets.FG_READONLY_TOKEN }}
        ref: "${{ vars.RELEASE_BRANCH }}-FG"
        path: "OpenMetadata-FG"

    # Show Info
    - name: "Show: Info"
      run: |
        ls -lDR ${GITHUB_WORKSPACE} | grep ':$'
        env | sort

    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@v2.5.0

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PAT }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.4.0
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        labels: |
            # org.opencontainers.image.revision=${{ env.SHA }}
            org.opencontainers.image.revision=${{ vars.RELEASE_BRANCH }}
        tags: |
            type=edge,branch=$repo.default_branch
            type=semver,pattern=v{{version}}
            type=sha,prefix=,suffix=,format=short

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4.0.0
      with:
        context: ${GITHUB_WORKSPACE}/OpenMetadata-FG/.
        # file: ${GITHUB_WORKSPACE}/OpenMetadata-FG/docker/mysql/Dockerfile_mysql
        file: ${GITHUB_WORKSPACE}/OpenMetadata-FG/docker/docker-compose-quickstart/Dockerfile
        # file: ${GITHUB_WORKSPACE}/OpenMetadata-FG/ingestion/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # - name: Docker Scout
    #   id: docker-scout
    #   # if: ${{ github.event_name == 'pull_request' }}
    #   uses: docker/scout-action@v0.20.0
    #   with:
    #     command: compare
    #     image: ${{ steps.meta.outputs.tags }}
    #     to: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:edge
    #     ignore-unchanged: true
    #     only-severities: critical,high
    #     token: ${{ secrets.DOCKER_PAT }}

    - name: "Docker Scout: Analyze for critical and high CVEs"
      id: docker-scout-cves
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: docker/scout-action@v0.20.0
      with:
        command: cves
        image: ${{ steps.meta.outputs.tags }}
        sarif-file: sarif.output.json
        summary: true
        # token: ${{ secrets.DOCKER_PAT }}

    # Ref: https://docs.github.com/en/code-security/code-scanning/integrating-with-code-scanning/uploading-a-sarif-file-to-github#uploading-a-code-scanning-analysis-with-github-actions
    - name: "Docker Scout: Upload SARIF result"
      id: upload-sarif
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: sarif.output.json
        checkout_path: "self"
